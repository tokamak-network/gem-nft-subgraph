type NFT @entity {
  id: ID!
  tokenID: BigInt
  owner: Bytes
  value: BigInt
  price: BigInt
  rarity: Int
  color: [Int!]
  quadrants: [Int!]
  miningPeriod: BigInt
  cooldownDueDate: BigInt
  isMining: Boolean
  isForSale: Boolean
  gemCooldownInitTime: BigInt
}

type Customer @entity {
  id: ID!
  address: Bytes
  isMining: Boolean
}

type GemCooldown @entity {
  id: ID!
  RareGemsCooldownPeriod: BigInt
  UniqueGemsCooldownPeriod: BigInt
  EpicGemsCooldownPeriod: BigInt
  LegendaryGemsCooldownPeriod: BigInt
  MythicGemsCooldownPeriod: BigInt
}

type GemMiningPeriod @entity {
  id: ID!
  RareGemsMiningPeriod: BigInt
  UniqueGemsMiningPeriod: BigInt
  EpicGemsMiningPeriod: BigInt
  LegendaryGemsMiningPeriod: BigInt
  MythicGemsMiningPeriod: BigInt
}

type GemMiningTry @entity {
  id: ID!
  RareminingTry: Int
  UniqueminingTry: Int
  EpicminingTry: Int
  LegendaryminingTry: Int
  MythicminingTr: Int
}

type TradeHistory @entity {
  id: Bytes!
  tradeType: String
  value: BigInt
  gemIds: [BigInt!]
  newId: BigInt
  trader: Bytes
  payer: Bytes
}

type Approval @entity {
  id: ID!
  from: Bytes
  to: Bytes
  tokenID: BigInt
  forAll: Boolean
}
